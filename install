#!/bin/bash




$devcurn=$(pwd)


if [ -f "/usr/bin/sv" ]; then
	init="runit"
elif [ -f "/usr/bin/systemctl" ]; then
    init="systemd"
elif [ -f "/usr/bin/rc-service" ]; then
    init="openrc"
else
	echo "The Nile Integrated Linux Environment does not support this Linux distribution."
	echo "Please refer to the NILE documentation at https://entertheduat.org for a list of system requirements."
	exit
fi

if command -v pacman >/dev/null 2>&1; then
	manager="pacman"
		echo "Updating your system to the latest packages."
			sudo -S pacman -Syu
		echo "Installing needed NILE dependencies."
			sudo -S pacman -S wget alacritty curl dmenu feh firefox fish gtk3 i3-wm i3status lua luarocks maim neofetch neovim noto-fonts papirus-icon-theme picom thunar unzip xclip	
elif command -v apt >/dev/null 2>&1; then
	manager="apt"
		echo "Adding required Apt repositories."
			sudo -S add-apt-repository ppa:aslatter/ppa -y
			sudo -S add-apt-repository ppa:papirus/papirus
		echo "Updating your system to the latest packages."
			sudo -S apt update && sudo apt upgrade
		echo "Installing needed NILE dependencies."
			sudo -S apt install wget alacritty curl dmenu feh firefox fish libgtk-3-0 i3-wm i3status lua5.4 luarocks maim neofetch fonts-noto papirus-icon-theme picom thunar unzip xclip
elif command -v xbps-install >/dev/null 2>&1; then
	manager="xbps"
		echo "Updating your system to the latest packages."
			sudo -S xbps-install -Su
		echo "Installing needed NILE dependencies."
			sudo -S xbps-install -S wget alacritty curl dmenu feh firefox fish-shell gtk+3 i3-gaps i3status lua luarocks maim neofetch noto-fonts-ttf papirus-icon-theme picom thunar unzip xclip
elif command -v dnf >/dev/null 2>&1; then
	manager="dnf"
		echo "Installing needed NILE dependencies."
			sudo -S dnf install wget alacritty curl dmenu feh firefox fish gtk3 i3 i3status lua luarocks maim neofetch google-noto-fonts-common papirus-icon-theme picom thunar unzip xclip
elif command -v zypper >/dev/null 2>&1; then
	manager="zypper"
		echo "Updating your system to the latest packages."
		sudo -S zypper refresh
			if grep -q 'ID="opensuse-leap"' /etc/os-release; then
    			sudo -S zypper up
			elif grep -q 'ID="opensuse-tumbleweed"' /etc/os-release; then
				sudo -S zypper dup
			fi
		echo "Installing needed NILE dependencies."
			sudo -S zypper install wget alacritty curl dmenu feh mozillafirefox fish gtk3-branding-upstream i3 i3status lua53 lua53-luarocks maim neofetch noto-mono-fonts papirus-icon-theme picom thunar unzip xclip
else
	echo "The Nile Integrated Linux Environment does not support this Linux distribution."
	echo "Please refer to the NILE documentation at https://entertheduat.org for a list of system requirements."
	exit
fi



installType=""
echo "Checking install type."
if [ -d "/var/NileRiver" ]; then
	echo "| Performing system update."
	installType="update"
	sudo -S chmod -R 777 /var/NileRiver
	sudo -S chmod -R 777 /var/NileRiver/*
else
	echo "| Performing system install."
	installType="install"

	echo -e "Checking $HOME filesystem."
	echo "| Checking $HOME/.config"
	if [ -d "$HOME/.config" ]; then
		echo "  > $HOME/.config already exists."
	else
		echo "  > Creating $HOME/.config"
		mkdir $HOME/.config
	fi

	echo "| Checking $HOME/.themes"
	if [ -d "$HOME/.themes" ]; then
		echo "  > $HOME/.themes already exists."
	else
		echo "  > Creating $HOME/.themes"
		mkdir $HOME/.themes
	fi

	echo "| Checking $HOME/.icons"
	if [ -d "$HOME/.icons" ]; then
		echo "  > $HOME/.icons already exists."
	else
		echo "  > Creating $HOME/.icons"
		mkdir $HOME/.icons
	fi

	echo "  > Creating /var/NileRiver"
	sudo -S mkdir /var/NileRiver
	sudo -S chown -R root:root /var/NileRiver
	sudo -S chmod -R 777 /var/NileRiver
	echo "  > Enabling fish."
	echo "fish" >> $HOME/.bashrc
fi



echo -e "\nChecking filesystem."
echo "| Checking core folder."
if [ -d "/var/NileRiver/core" ]; then
	echo "  > core folder present, updating."
	rm -rf /var/NileRiver/core/libraries
	rm /var/NileRiver/core/NileRiver.lua
else
	echo "  > Creating /var/NileRiver/core"
	mkdir /var/NileRiver/core
	mkdir /var/NileRiver/core/libraries-thirdparty
fi

echo "| Checking plugins folder."
if [ -d "/var/NileRiver/plugins" ]; then
	echo "  > plugins folder present."
else
	echo "  > Creating /var/NileRiver/plugins"
	mkdir /var/NileRiver/plugins
fi

echo "| Checking src folder."
if [ -d "/var/NileRiver/src" ]; then
	echo "  > src folder present."
else
	echo "  > Creating /var/NileRiver/src"
	mkdir /var/NileRiver/src
fi

echo "| Checking packages folder."
if [ -d "/var/NileRiver/packages" ]; then
	echo "  > Packages folder present."
else
	echo "  > Creating /var/NileRiver/packages"
	mkdir /var/NileRiver/packages
fi

echo "| Checking repo folder."
if [ -d "/var/NileRiver/repo" ]; then
	echo "  > repo folder present."
else
	echo "  > Creating /var/NileRiver/repo"
	mkdir /var/NileRiver/repo
fi

echo "| Checking work folder."
if [ -d "/var/NileRiver/work" ]; then
	echo "  > work folder present."
else
	echo "  > Creating /var/NileRiver/work"
	mkdir /var/NileRiver/work
fi

echo "| Checking init folder."
if [ -d "/var/NileRiver/init" ]; then
	echo "  > init folder present."
	echo "  > Clearing old init folder."
	rm -rf /var/NileRiver/init/*
else
	echo "  > Creating init folder."
	mkdir /var/NileRiver/init
fi

echo "| Checking pkgmanager folder."
if [ -d "/var/NileRiver/pkgmanager" ]; then
	echo "  > pkgmanager folder present."
	echo "  > Clearing old pkgmanager folder."
	rm -rf /var/NileRiver/pkgmanager/*
else
	echo "  > Creating pkgmanager folder."
	mkdir /var/NileRiver/pkgmanager
fi

echo "| Checking security folder."
if [ -d "/var/NileRiver/security" ]; then
	echo "  > security folder present."
else
	echo "  > Creating security folder."
	cp -r assets/premade_folders/security /var/NileRiver
fi

echo "| Checking config folder."
if [ -d "/var/NileRiver/config" ]; then
	echo "  > config folder present."
else
	echo "  > Creating config folder."
	mkdir /var/NileRiver/config
fi

echo "| Checking download folder."
if [ -d "/var/NileRiver/download" ]; then
	echo "  > download folder present, clearing."
	rm -rf /var/NileRiver/download/*
else
	echo "  > Creating download folder."
	mkdir /var/NileRiver/download
fi

echo "| Checking themes folder."
if [ -d "/var/NileRiver/themes" ]; then
	echo "  > themes folder present."
else
	echo "  > Creating themes folder."
	mkdir /var/NileRiver/themes
fi





echo -e "\nInstalling core system."
echo "| Installing init system identification files."
if [ "$init" == "runit" ]; then
        echo "  > Runit detected."
        cp assets/premade_folders/init/runit/init.lua /var/NileRiver/init
elif [ "$init" == "systemd" ]; then
        echo "  > SystemD detected."
        cp assets/premade_folders/init/systemd/init.lua /var/NileRiver/init
elif [ "$init" == "openrc" ]; then
        echo "  > OpenRC detected."
        cp assets/premade_folders/init/openrc/init.lua /var/NileRiver/init
fi
echo "| Installing package manager identification files."
cp assets/premade_folders/pkgmanager/$manager/pm.lua /var/NileRiver/pkgmanager

echo "| Installing core NILE system software."
echo "  > Installing the NileRiver.lua backend."
if [ -f "/var/NileRiver/core/NileRiver.lua" ]; then
	rm /var/NileRiver/core/NileRiver.lua
fi
cp assets/premade_folders/core/NileRiver.lua /var/NileRiver/core/
echo "  > Installing NILE system libraries."
if [ -d "/var/NileRiver/core/libraries" ]; then
	sudo -S rm -rf /var/NileRiver/core/libraries
fi
cp -r assets/premade_folders/core/libraries /var/NileRiver/core/
touch /var/NileRiver/core/xinitrc
echo "exec i3" > /var/NileRiver/core/xinitrc

echo "  > Installing the river frontend."
if [ -f "/usr/bin/river" ]; then
	sudo -S rm /usr/bin/river
fi
sudo -S chmod +x assets/premade_folders/river
sudo -S cp assets/premade_folders/river /usr/bin



echo -e "\nConfiguring system."
echo "| Checking for existing configuration."
if [ -d "/var/NileRiver/config/$USER" ]; then
	echo "  > Found."
	echo "| Current configurations will made into the theme Nile-Rollback"
	if [ -d "/var/NileRiver/themes/Nile-Rollback" ]; then
		rm -rf /var/NileRiver/themes/Nile-Rollback
	fi
	mkdir /var/NileRiver/themes/Nile-Rollback
	mv /var/NileRiver/config/$USER/* /var/NileRiver/themes/Nile-Rollback/
	rm -rf /var/NileRiver/config/$USER
fi

mkdir /var/NileRiver/config/$USER

echo "| Installing theming."
if [ -d "/var/NileRiver/themes/Nile-Dark-Theme" ]; then
	sudo -S rm -rf /var/NileRiver/themes/Nile-Dark-Theme
fi
if [ -d "/var/NileRiver/packages/the-duat_nile-dark-theme" ]; then
	sudo -S rm -rf /var/NileRiver/packages/the-duat_nile-dark-theme
fi
lua install-luahelper.lua installthemepackages
cp -r /var/NileRiver/themes/Nile-Dark-Theme/* /var/NileRiver/config/$USER/
echo "| Generating i3 config file."
/var/NileRiver/config/$USER/i3/genconf
echo "| Generating alacritty config file."
/var/NileRiver/config/$USER/alacritty/genconf

echo -e "\n\nInstalling theming."
echo "| Installing GTK theme."
echo "  > Preparing theme folder."
if [ ! -d "/var/NileRiver/download/cat" ]; then
	mkdir /var/NileRiver/download/cat
fi
echo "  > Downloading theme."
wget https://github.com/catppuccin/gtk/releases/download/v0.4.3/Catppuccin-Mocha-Standard-Pink-Dark.zip -O /var/NileRiver/download/catppuccin.zip
echo "  > Extracting theme."
unzip -qq /var/NileRiver/download/catppuccin.zip -d /var/NileRiver/download/cat
echo "  > Renaming theme files."
mv /var/NileRiver/download/cat/Catppuccin-Mocha-Standard-Pink-Dark /var/NileRiver/download/cat/Catppuccin
mv /var/NileRiver/download/cat/Catppuccin-Mocha-Standard-Pink-Dark-hdpi /var/NileRiver/download/cat/Catppuccin-hdpi
mv /var/NileRiver/download/cat/Catppuccin-Mocha-Standard-Pink-Dark-xhdpi /var/NileRiver/download/cat/Catppuccin-xhdpi
echo "  > Installing theme."
if [ -d "$HOME/.themes/catppuccin" ]; then
    rm -rf $HOME/.themes/Catppuccin
fi
if [ -d "$HOME/.themes/catppuccin-hdpi" ]; then
    rm -rf $HOME/.themes/Catppuccin-hdpi
fi
if [ -d "$HOME/.themes/catppuccin-xhdpi" ]; then
    rm -rf $HOME/.themes/Catppuccin-xhdpi
fi
mv /var/NileRiver/download/cat/* $HOME/.themes
echo "  > Removing theme zip file."
rm /var/NileRiver/download/catppuccin.zip

echo "| Installing cursor theme."
if [ ! -d "/var/NileRiver/download/cat-cursor" ]; then
	mkdir /var/NileRiver/download/cat-cursor
fi
echo "  > Downloading theme."
wget https://github.com/catppuccin/cursors/raw/main/cursors/Catppuccin-Mocha-Lavender-Cursors.zip -O /var/NileRiver/download/cursor.zip
echo "  > Extracting theme."
unzip -qq /var/NileRiver/download/cursor.zip -d /var/NileRiver/download/cat-cursor
echo "  > Renaming theme file."
mv /var/NileRiver/download/cat-cursor/Catppuccin-Mocha-Lavender-Cursors /var/NileRiver/download/cat-cursor/catppuccin-cursor
echo "  > Installing cursor theme."
if [ -d "$HOME/.icons/cat-cursor" ]; then
	rm -rf $HOME/.icons/cat-cursor
fi
sudo -S mv /var/NileRiver/download/cat-cursor/catppuccin-cursor $HOME/.icons

echo "| Configuring Papirus icon pack."
echo "  > Downloading configurations."
git clone https://github.com/catppuccin/papirus-folders /var/NileRiver/download/cat-papi
echo "  > Copying new icon files."
sudo -S cp -r /var/NileRiver/download/cat-papi/src/* /usr/share/icons/Papirus
echo "  > Overwriting old icon files."
sudo -S /var/NileRiver/download/cat-papi/papirus-folders -C cat-mocha-pink --theme Papirus-Dark

echo "| Writing GTK settings."
/var/NileRiver/config/$USER/gtk/genconf

echo "| Creating config file symlinks."
echo "  > Creating i3 symlink."
if [ -d "$HOME/.config/i3" ]; then
	rm -rf $HOME/.config/i3/*
else
	mkdir $HOME/.config/i3
fi
ln -s /var/NileRiver/config/$USER/i3/config $HOME/.config/i3/config

echo "  > Creating gtk symlink."
if [ -f "$HOME/.config/gtk-3.0/settings.ini" ]; then
	rm $HOME/.config/gtk-3.0/settings.ini
fi
ln -s /var/NileRiver/config/$USER/gtk/settings.ini $HOME/.config/gtk-3.0/settings.ini

echo "  > Creating picom symlink."
if [ -f "$HOME/.config/picom.conf" ]; then
	rm $HOME/.config/picom.conf
fi
ln -s /var/NileRiver/config/$USER/picom/picom.conf $HOME/.config/picom.conf

echo "  > Creating alacritty symlink."
if [ -d "$HOME/.config/alacritty" ]; then
	rm -rf $HOME/.config/alacritty/*
else
	mkdir $HOME/.config/alacritty
fi
ln -s /var/NileRiver/config/$USER/alacritty/alacritty.toml $HOME/.config/alacritty/alacritty.toml

echo "  > Creating fish symlink."
if [ -d "$HOME/.config/fish" ]; then
	rm -rf $HOME/.config/fish/*
else
	mkdir $HOME/.config/fish
fi
ln -s /var/NileRiver/config/$USER/fish/config.fish $HOME/.config/fish/config.fish




echo -e "\nFinishing up."
echo "| Installing system identification files."

echo "  > Modifying /etc/os-release"
if [ -f "/etc/os-release" ]; then
	dir="/etc/"
elif [ -f "/usr/lib/os-release" ]; then
	dir="/usr/lib/"
elif [ -f "/usr/libexec/os-release" ]; then
	dir="/usr/libexec/"
else
	dir="unknown"
fi
if [ "$dir" != "unknown" ]; then
	sudo -S mv assets/system_info/nile-os-release $dir
	sudo -S lua assets/system_info/rewrite_os-release.lua $dir
	ln -s "${dir}os-release" "/var/NileRiver/os-release"
else
	echo "> os-release file not found."
fi 

echo "  > Overwriting /usr/bin/neofetch"
sudo -S rm /usr/bin/neofetch
wget https://raw.githubusercontent.com/The-Duat/NileFetch/master/neofetch -O neofetch
sudo -S chmod 777 neofetch
sudo -S mv neofetch /usr/bin


if [[ $1 == "dev" ]]; then
	echo -e "\nDev mode active."
	sudo -S cp assets/dev/river /usr/bin/
	sudo -S rm -rf /var/NileRiver/core
	cp -r assets/dev/core /var/NileRiver
fi

echo "| Checking source folder."
if [ -d "/var/NileRiver/src/Nile" ]; then
	echo "  > Cleaning source folder."
	rm -rf /var/NileRiver/src/Nile
else
	echo "  > Source folder not found, enjoy your NILE installation :)"
fi

echo "| Setting NILE filesystem base ownership."
echo "  > /var/NileRiver     -  root:root"
sudo -S chown -R root:root /var/NileRiver

echo "| Setting NILE filesystem permissions."
echo "  > /var/NileRiver            -  755"
sudo -S chmod -R 755 /var/NileRiver
echo "  > /var/NileRiver/core       -  755"
sudo -S chmod -R 755 /var/NileRiver/core
echo "  > /var/NileRiver/plugins       -  755"
sudo -S chmod -R 755 /var/NileRiver/plugins
echo "  > /var/NileRiver/init       -  755"
sudo -S chmod -R 755 /var/NileRiver/init
echo "  > /var/NileRiver/pkgmanager -  755"
sudo -S chmod -R 755 /var/NileRiver/pkgmanager
echo "  > /var/NileRiver/repo       -  755"
sudo -S chmod -R 755 /var/NileRiver/repo
echo "  > /var/NileRiver/packages   -  755"
sudo -S chmod -R 755 /var/NileRiver/packages
echo "  > /var/NileRiver/security   -  755"
sudo -S chmod -R 755 /var/NileRiver/security
echo "  > /var/NileRiver/work       -  755"
sudo -S chmod -R 755 /var/NileRiver/work
echo "  > /var/NileRiver/src        -  755"
sudo -S chmod -R 755 /var/NileRiver/src
echo "  > /var/NileRiver/config     -  755"
sudo -S chmod -R 755 /var/NileRiver/config
for d in /var/NileRiver/config/*/; do
	dn=$(basename $d)
	echo "  > $d   - 755 (Ownership: $dn:$dn)"
	sudo -S chown -R $dn:$dn $d
	sudo -S chmod -R 755 $d
done
echo "  > /var/NileRiver/download  -  777"
sudo -S chmod -R 777 /var/NileRiver/download


echo -e "| Disabling any preinstalled display managers."
if ps -e | grep sddm; then
	echo -e "  > Disabling sddm"
	river sv disable sddm
elif ps -e | grep gdm; then
	echo -e "  > Disabling gdm"
	river sv disable gdm
fi

echo -e "\n\n"
if [ "$installType" == "install" ]; then
	echo "The installation script for the Nile Integrated Linux Environment has finished execution."
	echo "Documentation:  https://entertheduat.org"
	echo "Source Code:    http://github.com/The-Duat/Nile"
	# echo "Discord Server: https://discord.com/invite/AVSuRZsTXp"
	echo "It is recommended to reboot your device after installation."
	echo -e "Reboot now? (y/n)\n\n> "
	read ans  
	if [ "$ans" == "y" ]; then
		reboot
	fi
fi
